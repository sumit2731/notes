package com.eazybytes.object.demo;

/**
 * Here cannonical construtor will be generated
 */
//public record PersonRecord(String name, String occupation) {
//}

/**
 * By degfault cannonical constructor will be generated, but sometimes you want to have validations inside constructor
 * so you need to define a custom constructor
 *
 * When we define my own constructor, whatever default constructor which  is going to be generated by the Record class is
 * no more going to be generated because we are trying to define our own constructor.
 *
 * So the constructor that we are going to write inside the Record class, we can call it as canonical
 * constructor. since default constructor wnt be dere, we need to initialize the fields inside cannonical construtors
 */
//public record PersonRecord(String name, String occupation) {
//    /**
//     *If we do not do anything extra in constructor, we get warning that this is redundant cannotnical constructor
//     */
//    public PersonRecord(String name,String occupation) {
//        if(name == null || occupation == null) {
//            throw new IllegalArgumentException();
//        }
//        this.name = name;
//        this.occupation = occupation;
//    }
//
//}

/**
 * This is compact form of cannonical constructor
 */

public record PersonRecord(String name, String occupation) {
    /**
     *This is compact form
     * a)(no need to mention parameter, it takes all parameters from above
     * b)no need to implicit assign values
     */
    public PersonRecord {
        if (name == null || occupation == null) {
            throw new IllegalArgumentException();
        }
    }

}