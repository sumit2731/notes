1)docker exec "containerName" "command"
    This runs a command inside a running container
2)docker run -it node npm init
    this replaces the default command of container.
    Now, when we start the node container the default command that is executed in the container is the node executable itself
    which enters the so called a Rebel which is just an interactive mode where we can run node commands.

    this gives accepts some inputs and container exists after that because we override the default command
    which would have opened this ongoing node interactive mode with the npm init command, which just creates a project
    and then stops once it finished.

3)docker-compose run serviceName commandName
    This will run a service and run that command in that container. command will be appended to entryPoint.
code 1 -
    3)docker build -t node-util .
    4)docker run -it -v "/Users/sumeet.sood/notes/Lectures/Maxudemy Courses/Docker & Kubernetes/7)WorkingWithUtilityConainers/code1:/app" node-util npm init

code 2 -
    5)docker build -t node-util .
    6)docker run -it -v "/Users/sumeet.sood/notes/Lectures/Maxudemy Courses/Docker & Kubernetes/7)WorkingWithUtilityConainers/code2:/app" node-util init
    7)docker run -it -v "/Users/sumeet.sood/notes/Lectures/Maxudemy Courses/Docker & Kubernetes/7)WorkingWithUtilityConainers/code2:/app" node-util install express --save

code 3 -
    8)docker-compose run npm install