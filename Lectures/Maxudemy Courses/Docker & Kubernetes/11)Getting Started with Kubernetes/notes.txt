Kubernetes - Kubernetes is an additional tool, you could say,even though it's not really a tool,it's more like a framework, a 
    collection of concepts,a standard, you could say.And it's a tool, this collection of standards and it's framework,
    which will help us with Container Orchestration,and large scale deployments,independent of the cloud provider we might be using.
    
    Kubernetes, also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized 
        applications.


problems in container deployment - see slide 1.


how AWS ECS solves those problems but then there is problem of lockin.


Kubernetes can help us with this because with kubernetes,we have a way of defining our deployments,our scaling of containers
    and how containers should be monitored and replaced if they fail.We have a way of defining all of that independent from the 
    cloud service we're using. see slides 4-7 how kubernetes solves this problem.

    you can define kubernetes config file, then this config is understood by all cloud providers, you can even install kubernets on 
    your cloud machine and then it will create the infrastructure defined in kubernetes config file.


kubernetes architecture - lecture 174(slide 9). see slides also.Important terms -
    worker node
    pods
    master node
    cluster
    control plane


worker node - lecture 175(slide 10). important terms -

    pods can have single contianer or multiple containers that need to work closely.these pods are controller by kubernetes.
    typical idea is that worker can have multiple pods.These pods can be copy of each other(for scalling) or these pods can 
        have entirely diffrent contianer inside of them to do entirely diffrent task. its like running diffrent containers on
        same machine.
    additional softwares in worker node -
        docker
        kubelet - this allows  master node to controls the pods running in worker node.
        kubeproxy controls which traffic is allowed to each the pod and which traffic is allowed to leave workker node.


master node - lecture 176 -

    API Server - counter part of kubectl on worker node
    scheduler - selects nodes on which new pods should be created either because of scaling or some pod went down
    kube-controller manager - watches and controls worker nodes overall.sees if correct no of pods up and running.
        works closely with scheduler and API Server.
    cloud controller manager -specific version of kube-controller manager,which is doing the same thing,but this is 
        cloud-provider specific.And this actually knows how to tell that cloud provider,for example AWS or Microsoft
        Azure, what to do.So this cloud-controller manager basically just translates instructions to AWS or Azure or
        whatever you're using.


    The big cloud providers, which you are very likely to use in reality anyways, already got services which take all 
    that away from you and where you therefore just needs to provide your kubernetes configuration and they do all the
    heavy lifting.


important terms and concepts -lecture 178 (slide 14) -

    new term is services - Services, I can already tell you that are logical sets,so in the end, groups of Pods with a unique Pod
        and Container-independent IP address.And services will be important for reaching our Pods,and therefore the Containers 
        inside of them.Services therefore, of course,are related to this proxy thing which I did mention in this section section.
    And at the end,service is just a term in the Kubernetes world for exposing certain Pods to the outside world,for ensuring that
    certain Pods are reachable with a certain IP address or domain.









