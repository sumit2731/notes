    Code 1 
        here we learned about important kubernetes objects - pods, deployment and services.
        we created a cluster, ran containers exposed them to internet, updated those containers, reverted back to previous versions,
        but all that done via kubectl commands. which is imperative command, now we will see declarative appraoch.
    Code 2 
        here we created a file for creating a deployment object(deployment.yaml) and then we applied it to cluster by using command -
            kubectl apply -f=deployment.yaml
            but we got selector error.then we defined the selectors for deployment object and ran command again this time our deployment was created,
            pods were also created. but still we cannot access them.because we have not defined services.and applied that -
            kubectl apply -f=services.yaml

        Then we saw that if we want to update some resources we can do that with updating the file and then applying that file again.
        to delete the resources, we can delete objects by name or we can tell kubernetes to delete all resources created by a file.
            kubectl delete -f=deployment.yaml

        Then we combined both deployment.yaml and service.yaml into a single config file - master-deployment.yaml.
        when we define multiple resources we separate them with '---'.when we combine deployment object and service object into
        one file,it is best practice to first define service and then deployment.Also these objects are living organisms,service once
        created while actively keep looking for what other pod match its selectors and if new matching pods are added,it will be added
        to service.

        then we saw matchExpression option in selector(for deployment).this is advance selector. you can also use selectors when running commands.
        for 

for example, with the delete command,
        We can also use selector while running commands for example, while deleting objects.
            kubectl delete -l